apiVersion: apps/v1
kind: Deployment
metadata:
  name: finance-app
  namespace: finance-app
  labels:
    app: finance-app
    component: web
spec:
  replicas: 2
  selector:
    matchLabels:
      app: finance-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: finance-app
        component: web
    spec:
      serviceAccountName: finance-app-sa
      initContainers:
      - name: wait-for-postgres
        image: postgres:13
        command: ['sh', '-c']
        args:
        - |
          until pg_isready -h postgres-service -p 5432 -U financeuser; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
          echo "PostgreSQL is ready!"
        env:
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: finance-app-secrets
              key: POSTGRES_PASSWORD  # Fixed key name
      containers:
      - name: finance-app
        image: prameshwar884/personal-finance-tracker-web:latest
        ports:
        - containerPort: 5000
          name: http
        env:
        # Use DATABASE_URL from configmap (it's already properly formatted)
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: finance-app-config
              key: DATABASE_URL
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: finance-app-secrets
              key: SECRET_KEY  # Fixed key name
        - name: FLASK_ENV
          valueFrom:
            configMapKeyRef:
              name: finance-app-config
              key: FLASK_ENV
        - name: UPLOAD_FOLDER
          valueFrom:
            configMapKeyRef:
              name: finance-app-config
              key: UPLOAD_FOLDER
        - name: MAX_CONTENT_LENGTH
          valueFrom:
            configMapKeyRef:
              name: finance-app-config
              key: MAX_CONTENT_LENGTH
        volumeMounts:
        - name: uploads-storage
          mountPath: /app/static/uploads
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: uploads-storage
        persistentVolumeClaim:
          claimName: uploads-pvc-fixed  # Use the fixed PVC
